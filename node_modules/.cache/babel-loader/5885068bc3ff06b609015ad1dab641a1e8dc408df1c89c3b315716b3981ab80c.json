{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kroco\\\\Desktop\\\\d9-hw-start\\\\src\\\\components\\\\CompanySearchResults.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanySearchResults = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n  useEffect(() => {\n    getJobs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4\",\n          children: [\"Job posting for: \", params.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanySearchResults, \"dckmTRAm79Ju2O9AWzYTIwDN4qo=\", false, function () {\n  return [useParams];\n});\n_c = CompanySearchResults;\nexport default CompanySearchResults;\nvar _c;\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","useParams","jsxDEV","_jsxDEV","CompanySearchResults","_s","jobs","setJobs","params","baseEndpoint","getJobs","response","fetch","company","ok","data","json","alert","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","jobData","_id","_c","$RefreshReg$"],"sources":["C:/Users/Kroco/Desktop/d9-hw-start/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\n\nconst CompanySearchResults = () => {\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n\n  useEffect(() => {\n    getJobs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n      if (response.ok) {\n        const { data } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"my-3\">\n          <h1 className=\"display-4\">Job posting for: {params.company}</h1>\n          {jobs.map(jobData => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CompanySearchResults;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,MAAM,GAAGP,SAAS,CAAC,CAAC;EAE1B,MAAMQ,YAAY,GAAG,0DAA0D;EAE/Ed,SAAS,CAAC,MAAM;IACde,OAAO,CAAC,CAAC;IACT;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAY,GAAGD,MAAM,CAACK,OAAO,CAAC;MAC3D,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtCT,OAAO,CAACQ,IAAI,CAAC;MACf,CAAC,MAAM;QACLE,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEf,OAAA,CAACN,SAAS;IAAAwB,QAAA,eACRlB,OAAA,CAACL,GAAG;MAAAuB,QAAA,eACFlB,OAAA,CAACJ,GAAG;QAACuB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBlB,OAAA;UAAImB,SAAS,EAAC,WAAW;UAAAD,QAAA,GAAC,mBAAiB,EAACb,MAAM,CAACK,OAAO;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC/DpB,IAAI,CAACqB,GAAG,CAACC,OAAO,iBACfzB,OAAA,CAACH,GAAG;UAAmBe,IAAI,EAAEa;QAAQ,GAA3BA,OAAO,CAACC,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACrB,EAAA,CArCID,oBAAoB;EAAA,QAETH,SAAS;AAAA;AAAA6B,EAAA,GAFpB1B,oBAAoB;AAuC1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}